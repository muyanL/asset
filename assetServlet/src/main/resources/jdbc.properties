#基本属性driverClassName、 url、user、password
datasource.url = jdbc:mysql://192.168.128.11:3306/asset2?useUnicode=true&characterEncoding=utf-8
datasource.username = root
datasource.password = 123456
datasource.driver-class-name=com.mysql.jdbc.Driver
#配置初始化大小、最小、最大 -->
#通常来说，只需要修改initialSize、minIdle、maxActive 
#初始化时建立物理连接的个数，缺省值为0
datasource.druid.initialSize=1
datasource.druid.minIdle=10
datasource.druid.maxActive=20
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
datasource.druid.maxWait=60000
#有些数据库连接的时候有超时限制（MySQL连接在8小时后断开），或者由于网络中断等原因，连接池的连接会出现失效的情况，这时候可以设置一个testWhileIdle参数为true， 如果检测到当前连接不活跃的时间超过了timeBetweenEvictionRunsMillis，则去手动检测一下当前连接的有效性，在保证确实有效后才加以使用。 在检测活跃性时，如果当前的活跃时间大于minEvictableIdleTimeMillis，则认为需要关闭当前连接。当 然，为了保证绝对的可用性，你也可以使用testOnBorrow为true（即在每次获取Connection对象时都检测其可用性），不过这样会影响性能。 -->
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒（3600000:为1小时）
datasource.druid.timeBetweenEvictionRunsMillis=3600000
#配置一个连接在池中最小生存的时间，单位是毫秒(300000:为5分钟)
datasource.druid.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
datasource.druid.validationQuery=select 1
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。建议配置为true，不影响性能，并且保证安全性。
datasource.druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。缺省值:true
datasource.druid.testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。缺省值:false
datasource.druid.poolPreparedStatements=false
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100。
datasource.druid.maxPoolPreparedStatementPerConnectionSize=20



